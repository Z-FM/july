<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.july.db.dao.BlogTypeMapper">
  <resultMap id="BaseResultMap" type="com.july.po.BlogType">
    <id column="type_id" jdbcType="INTEGER" property="typeId" />
    <result column="type_name" jdbcType="VARCHAR" property="typeName" />
    <result column="type_describe" jdbcType="VARCHAR" property="typeDescribe" />
    <result column="type_parent" jdbcType="INTEGER" property="typeParent" />
    <result column="type_create_time" jdbcType="TIMESTAMP" property="typeCreateTime" />
    <result column="type_update_time" jdbcType="TIMESTAMP" property="typeUpdateTime" />
    <result column="type_status" jdbcType="INTEGER" property="typeStatus" />
  </resultMap>
  <sql id="Base_Column_List">
    type_id, type_name, type_describe, type_parent, type_create_time, type_update_time, 
    type_status
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from blog_type
    where type_id = #{typeId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from blog_type
    where type_id = #{typeId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.july.po.BlogType">
    insert into blog_type (type_id, type_name, type_describe, 
      type_parent, type_create_time, type_update_time, 
      type_status)
    values (#{typeId,jdbcType=INTEGER}, #{typeName,jdbcType=VARCHAR}, #{typeDescribe,jdbcType=VARCHAR}, 
      #{typeParent,jdbcType=INTEGER}, #{typeCreateTime,jdbcType=TIMESTAMP}, #{typeUpdateTime,jdbcType=TIMESTAMP}, 
      #{typeStatus,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.july.po.BlogType">
    insert into blog_type
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="typeId != null">
        type_id,
      </if>
      <if test="typeName != null">
        type_name,
      </if>
      <if test="typeDescribe != null">
        type_describe,
      </if>
      <if test="typeParent != null">
        type_parent,
      </if>
      <if test="typeCreateTime != null">
        type_create_time,
      </if>
      <if test="typeUpdateTime != null">
        type_update_time,
      </if>
      <if test="typeStatus != null">
        type_status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="typeId != null">
        #{typeId,jdbcType=INTEGER},
      </if>
      <if test="typeName != null">
        #{typeName,jdbcType=VARCHAR},
      </if>
      <if test="typeDescribe != null">
        #{typeDescribe,jdbcType=VARCHAR},
      </if>
      <if test="typeParent != null">
        #{typeParent,jdbcType=INTEGER},
      </if>
      <if test="typeCreateTime != null">
        #{typeCreateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="typeUpdateTime != null">
        #{typeUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="typeStatus != null">
        #{typeStatus,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.july.po.BlogType">
    update blog_type
    <set>
      <if test="typeName != null">
        type_name = #{typeName,jdbcType=VARCHAR},
      </if>
      <if test="typeDescribe != null">
        type_describe = #{typeDescribe,jdbcType=VARCHAR},
      </if>
      <if test="typeParent != null">
        type_parent = #{typeParent,jdbcType=INTEGER},
      </if>
      <if test="typeCreateTime != null">
        type_create_time = #{typeCreateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="typeUpdateTime != null">
        type_update_time = #{typeUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="typeStatus != null">
        type_status = #{typeStatus,jdbcType=INTEGER},
      </if>
    </set>
    where type_id = #{typeId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.july.po.BlogType">
    update blog_type
    set type_name = #{typeName,jdbcType=VARCHAR},
      type_describe = #{typeDescribe,jdbcType=VARCHAR},
      type_parent = #{typeParent,jdbcType=INTEGER},
      type_create_time = #{typeCreateTime,jdbcType=TIMESTAMP},
      type_update_time = #{typeUpdateTime,jdbcType=TIMESTAMP},
      type_status = #{typeStatus,jdbcType=INTEGER}
    where type_id = #{typeId,jdbcType=INTEGER}
  </update>
</mapper>